//Global Variables
var TRUE = 1; 
var FALSE = 0;
var theta;

//______________________________________________________________

var RIGHT = 39;
var LEFT = 37;
var UP = 38;
var DOWN = 40;

//______________________________________________________________

var rightON = 0;
var leftON = 0;
var upON = 0;
var downON = 0; 

//________________________________________________________________

//BUTTON PRESSING

function press(direction)
{
var e = jQuery.Event("keydown");
    e.keyCode = direction;
    jQuery("canvas").trigger(e);
    
     if(direction == 39){rightON=1;}
    if(direction == 37){leftON=1;}
    if(direction == 38){upON=1;}
    if(direction == 40){downON=1;}
    
    
}
function release(direction)
{
var e = jQuery.Event("keyup");
    e.keyCode = direction;
    jQuery("canvas").trigger(e);
    
    
     if(direction == 39){rightON=1;}
    if(direction == 37){leftON=1;}
    if(direction == 38){upON=1;}
    if(direction == 40){downON=1;}
    
}


// _______________________________________________________________

function isRight(x)
{
  if (x==1) // ball should be moving right
  {
    
    if(rightON==0) // ball isnt moving right
    {
    press(RIGHT);
    }
    
  }
  
  if (x==0) // ball should stop moving right
  {
    if(rightON==1)//ball is moving right
    {
    release(RIGHT);
    }
    
  }
}

function isLeft(x)
{
  if (x==1) // ball should be moving left
  {
    
    if(leftON==0) // ball isnt moving left
    {
    press(LEFT);
    }
    
  }
  
  if (x==0) // ball should stop moving left
  {
    if(leftON==1)//ball is moving left
    {
    release(LEFT);
    }
   
  }
}  

function isUp(x)
{
  if (x==1) // ball should be moving up
  {
    
    if(upON==0) // ball isnt moving up
    {
    press(UP);
    }
    
  }
  
  if (x==0) // ball should stop moving up
  {
    if(upON==1)//ball is moving up
    {
    release(UP);
    }
    
  }
}  

function isDown(x)
{
  if (x==1) // ball should be moving down
  {
    
    if(downON==0) // ball isnt moving down
    {
    press(DOWN);
    }
    
  }
  
  if (x==0) // ball should stop moving down
  {
    if(downON==1)//ball is moving down
    {
    release(DOWN);
    }
    
  }
}  

// ___________________________________________________________________________________________

function rightVariable(theta)
{
    if(rightON !=1)
    {
    press(RIGHT);
    }
setTimeout(release(RIGHT),2.25*theta);

}

function leftVariable(theta)
{
    if(leftON !=1)
    {
    press(LEFT);
    }
setTimeout(release(LEFT),2.25*theta);

}

function upVariable(theta)
{
    if(upON !=1)
    {
    press(UP);
    }
setTimeout(release(UP),2.25*theta);

}

function downVariable(theta)
{
    if(downON !=1)
    {
    press(DOWN);
    }
setTimeout(release(DOWN),2.25*theta);

}
//_______________________________________________________________
//_______________________________________________________________
// CALCULATE THETA

function calculate_theta(xdiff,ydiff)
{

var theta;

  if(xdiff>=0) //either first or fourth quadrant
  {
    if(ydiff>0)//first quadrant
    {
   theta=Math.atan(ydiff/xdiff);
    return (180/Math.PI)*theta;
    }
    else //fourth quadrant
    {
    theta = (2*Math.PI)+Math.atan(ydiff/xdiff);
    return (180/Math.PI)*theta;
    }
  }

  if(xdiff<0) //either second or third quadrant
  {
    if(ydiff>=0)//second quadrant
    {
    theta = Math.atan2(ydiff,xdiff);
    return (180/Math.PI)*theta;
    }
    else //third quadrant
    {
    theta = Math.PI+Math.atan(ydiff/xdiff);
    return (180/Math.PI)*theta
    }
  }
}
//_______________________________________________________________
//_______________________________________________________________

//GET PLAYERS

var target = null;
var self = null;
var players = [];

function update_player_list()
{
//reset and update the list of players
players = [];
var curr = 0;
  for(i = 0; i < 15; i++)
  {
    if(tagpro.players[i] != null)
    {
    players[curr++] = tagpro.players[i];
    }
  }
}


function ai_get_self()
{
  for(i = 0; i < players.length; i++)
  {
    if(players[i].name == "hotshot bot")
    {
    return players[i];
    } 
  }
return null;
}

function ai_get_other()
{
  for(i = 0; i < players.length; i++)
  {
    if(players[i].flag == 3)
    {
    return players[i];
    }
  }
return null;
}
//______________________________________________________
//______________________________________________________






function update()
{

self = ai_get_self();
target = ai_get_other();

  if(self != null && target != null)
  {
  var xdiff = target.x - self.x;
  var ydiff = target.y - self.y;
  }
  
theta=calculate_theta(xdiff,ydiff); 

if(theta==0 || theta==360)
{
isRight(TRUE); 
isLeft(FALSE); 
isUp(FALSE); 
isDown(FALSE);
}

if(theta==90)
{
isRight(FALSE); 
isLeft(FALSE); 
isUp(TRUE); 
isDown(FALSE);
}

if(theta==180)
{
isRight(FALSE); 
isLeft(TRUE); 
isUp(FALSE); 
isDown(FALSE);
}

if(theta==270)
{
isRight(FALSE); 
isLeft(FALSE); 
isUp(FALSE); 
isDown(TRUE);
}

if(0<theta<90)
{
isLeft(FALSE);
isDown(FALSE);

  if(theta==45)
  {
  isRight(TRUE); 
  isUp(TRUE); 
  
  }
  if(theta>45)
  {
  isUp(TRUE);
  theta = 90-theta;
  rightVariable(theta); //press some right values
  }
  else
  {
  isRight(TRUE); 
  upVariable(theta); //press some up values
  }
}  

if(90<theta<180){

isDown(FALSE);
isRight(FALSE);

  if(theta==135){
  isLeft(TRUE); 
  isUp(TRUE); 
  }
  if(theta>135){
  isLeft(TRUE); 
  theta=180-theta;
  upVariable(theta); //press some up values
  }
  else{
  isUp(TRUE);
  theta=theta-90;
  leftVariable(theta); //press some left values
  }
}

if(180<theta<270){

isUp(FALSE);
isRight(FALSE);

  if(theta==225){
  isLeft(TRUE); 
  isDown(TRUE); 
  }
  if(theta>225){
  isDown(TRUE); 
  theta=270-theta;
  leftVariable(theta); //press some left values
  }
  else{
  isLeft(TRUE); 
  theta=theta=180
  downVariable(theta); //press some down values
  }
}

if(270<theta<360){

isUp(FALSE);
isLeft(FALSE);

  if(theta==315){
  isRight(TRUE); 
  isDown(TRUE); 
  }
  if(theta>315){
  isRight(TRUE); 
  theta=360-theta;
  downVariable(theta); //press some down values
  }
  else{
  isDown(TRUE); 
  theta=theta-270;
  rightVariable(theta); //press some right values
  }
}

}

function loop()
{

update();

setTimeout(loop(),100);
}

loop();


