function chat(words){
tagpro.socket.emit("chat", {message: words, toAll: 1});
}


function convert(num){

if(num == 37){
return "left";
}
if(num == 38){
return "up";
}
if(num == 39){
return "right";	
}
if(num == 40){
return "down";
}
}

function ai_get_self(){
for(i = 0; i < ai_players.length; i++)
{
if(ai_players[i].name == "hotshot bot")
{
return ai_players[i];
}
}
return null;
}

function ai_get_hotshot(){

for(i = 0; i < ai_players.length; i++)
{
if(ai_players[i].name == "gg hotshot")
{
return ai_players[i];
}
}
return null;
}


function ai_get_other(){
for(i = 0; i < ai_players.length; i++)
{
if(ai_players[i].flag == 3)
{
return ai_players[i];
}
}
return null;
}

//helpers above 'real code' below

var ai_players = [];
var ai_buttons = [];

var ai_target = null;
var ai_self = null;

function ai_update(){



var next_buttons = [];

ai_self = ai_get_self();
ai_target = ai_get_other();

if(ai_self != null && ai_target != null){



var xdiff = ai_target.x - ai_self.x;
var ydiff = ai_target.y - ai_self.y;


if(xdiff > 15){
next_buttons.push(39);
}
else if (xdiff < -15){
next_buttons.push(37);
}

if(ydiff > 15){
next_buttons.push(40);
}	
else if (ydiff < -15){
next_buttons.push(38);
}

}


//press each code in next buttons which isn't in ai_buttons
//release each code in ai_buttons which isn't in next_buttons

var to_press = [];
var to_release = [];

//only press buttons in next_buttons but not in ai_buttons
for(var i = 0; i < next_buttons.length; i++){
if(ai_buttons.indexOf(next_buttons[i]) < 0){
to_press.push(next_buttons[i]);
}
}

//only release buttons in ai_buttons but not in next_buttons
for(var i = 0; i < ai_buttons.length; i++){
if(next_buttons.indexOf(ai_buttons[i]) < 0){
to_release.push(ai_buttons[i]);
}
}

//press
var e = jQuery.Event("keydown");

for(var i = 0; i < to_press.length; i++){

//add to the held buttons
ai_buttons.push(to_press[i]);

e.keyCode = to_press[i];
jQuery("canvas").trigger(e);
}


//release
e = jQuery.Event("keyup");

for(var i = 0; i < to_release.length; i++){

//remove from buttons
ai_buttons.splice(ai_buttons.indexOf(to_release[i]), 1);

e.keyCode = to_release[i];
jQuery("canvas").trigger(e);
}

}


function ai_update_rarely(){
if(ai_get_other() != null){
chat("I will get you " + ai_get_other().name);
}
}

function ai_update_sometimes(){


//reset and update the list of players
ai_players = [];

var curr = 0;
for(i = 0; i < 8; i++){
if(tagpro.players[i] != null){
ai_players[curr++] = tagpro.players[i];

}
}


}


//ai_loop calls update every 100ms
var ai_sometimes = 0;
var ai_rarely = 0 ;

function ai_loop(){	

ai_update();

if(ai_rarely++ > 1000){
ai_update_rarely();
ai_rarely = 0;
}


//sometimes do stuff
if(ai_sometimes++ > 10){
ai_update_sometimes();
ai_sometimes = 0;
}

setTimeout(ai_loop, 1);
}


ai_loop();




